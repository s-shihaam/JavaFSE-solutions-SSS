CREATE OR REPLACE PROCEDURE SET_PRESENT_YEAR(YR OUT NUMBER) IS
    NOT_VALID_YEAR EXCEPTION;
    BEGIN
        DBMS_OUTPUT.PUT_LINE('ENTER YEAR: ');
            YR:=&PRESENT_YEAR;
            IF YR<=0 THEN
                RAISE NOT_VALID_YEAR;
            END IF;
    EXCEPTION
        WHEN NOT_VALID_YEAR THEN
            DBMS_OUTPUT.PUT_LINE('INVALID YEAR INPUT!');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('SOME OTHER ERROR OCCURED!!');
    END;

CREATE OR REPLACE PROCEDURE GET_AGE(DOB IN CUSTOMERS.DOB%TYPE,PRESENT_YEAR IN NUMBER,C OUT NUMBER) IS
    NOT_VALID_YEAR EXCEPTION;
    STR_AGE VARCHAR2(10);
    DOB_YEAR INTEGER;
    BEGIN
        STR_AGE := '19'||SUBSTR(DOB,8);
        DOB_YEAR := TO_NUMBER(STR_AGE);
        C:= PRESENT_YEAR-DOB_YEAR;
        IF C<0 THEN
            RAISE NOT_VALID_YEAR;
        END IF;
    
    EXCEPTION
        WHEN NOT_VALID_YEAR THEN
            DBMS_OUTPUT.PUT_LINE('INVALID YEAR INPUT!');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('SOME OTHER ERROR OCCURED!!');
    END;

SET SERVEROUTPUT ON;
DECLARE
    AGE INTEGER;
    PRESENT_YEAR INTEGER;
    NOT_VALID_YEAR EXCEPTION;

BEGIN
    SET_PRESENT_YEAR(PRESENT_YEAR);
    DBMS_OUTPUT.PUT_LINE('PRESENT YEAR: '||PRESENT_YEAR);
    FOR REC IN (SELECT CUSTOMERID,DOB FROM CUSTOMERS WHERE DOB IS NOT NULL) LOOP
        GET_AGE(REC.DOB,PRESENT_YEAR,AGE);
        IF AGE > 60 THEN
            DBMS_OUTPUT.PUT_LINE('CONDITIONS SATISFIED FOR ID:  '||REC.CUSTOMERID);
            UPDATE LOANS
            SET INTERESTRATE = INTERESTRATE-(INTERESTRATE*0.01)
            WHERE CUSTOMERID=REC.CUSTOMERID;
        END IF;
    END LOOP;
EXCEPTION
    WHEN NOT_VALID_YEAR THEN
        DBMS_OUTPUT.PUT_LINE('INVALID YEAR INPUT!');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('SOME OTHER ERROR OCCURED!!');
END;
/

SELECT * FROM LOANS;
